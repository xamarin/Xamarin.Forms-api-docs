<Type Name="BaseShellItem" FullName="Xamarin.Forms.BaseShellItem">
  <TypeSignature Language="C#" Value="public class BaseShellItem : Xamarin.Forms.NavigableElement, Xamarin.Forms.ITabStopElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BaseShellItem extends Xamarin.Forms.NavigableElement implements class Xamarin.Forms.ITabStopElement" />
  <TypeSignature Language="DocId" Value="T:Xamarin.Forms.BaseShellItem" />
  <TypeSignature Language="F#" Value="type BaseShellItem = class&#xA;    inherit NavigableElement&#xA;    interface ITabStopElement" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Forms.Core</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Xamarin.Forms.NavigableElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Xamarin.Forms.ITabStopElement</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Title = {Title}, Route = {Route}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A <see cref="T:Xamarin.Forms.NavigableElement" /> that is the base class for <see cref="T:Xamarin.Forms.ShellGroupItem" /> and <see cref="T:Xamarin.Forms.ShellContent" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BaseShellItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.BaseShellItem.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new <see cref="T:Xamarin.Forms.BaseShellItem" /> with default values.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Appearing">
      <MemberSignature Language="C#" Value="public event EventHandler Appearing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Appearing" />
      <MemberSignature Language="DocId" Value="E:Xamarin.Forms.BaseShellItem.Appearing" />
      <MemberSignature Language="F#" Value="member this.Appearing : EventHandler " Usage="member this.Appearing : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Disappearing">
      <MemberSignature Language="C#" Value="public event EventHandler Disappearing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disappearing" />
      <MemberSignature Language="DocId" Value="E:Xamarin.Forms.BaseShellItem.Disappearing" />
      <MemberSignature Language="F#" Value="member this.Disappearing : EventHandler " Usage="member this.Disappearing : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlyoutIcon">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.ImageSource FlyoutIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Xamarin.Forms.ImageSource FlyoutIcon" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.BaseShellItem.FlyoutIcon" />
      <MemberSignature Language="F#" Value="member this.FlyoutIcon : Xamarin.Forms.ImageSource with get, set" Usage="Xamarin.Forms.BaseShellItem.FlyoutIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.ImageSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The icon to use for the item. If this property is unset, it will fallback to using the <see cref="P:Xamarin.Forms.BaseShellItem.Icon" /> property value.</summary>
        <value>A <see cref="T:Xamarin.Forms.ImageSource" /> that represents an icon.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlyoutIconProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty FlyoutIconProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty FlyoutIconProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.BaseShellItem.FlyoutIconProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable FlyoutIconProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.BaseShellItem.FlyoutIconProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Xamarin.Forms.BaseShellItem.FlyoutIcon" /> field.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.ImageSource Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Xamarin.Forms.ImageSource Icon" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.BaseShellItem.Icon" />
      <MemberSignature Language="F#" Value="member this.Icon : Xamarin.Forms.ImageSource with get, set" Usage="Xamarin.Forms.BaseShellItem.Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.ImageSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Defines the icon to display in parts of the chrome that are not the flyout.</summary>
        <value>A <see cref="T:Xamarin.Forms.ImageSource" /> that represents an icon.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty IconProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty IconProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.BaseShellItem.IconProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable IconProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.BaseShellItem.IconProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Xamarin.Forms.BaseShellItem.Icon" /> field.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsChecked">
      <MemberSignature Language="C#" Value="public bool IsChecked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsChecked" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.BaseShellItem.IsChecked" />
      <MemberSignature Language="F#" Value="member this.IsChecked : bool" Usage="Xamarin.Forms.BaseShellItem.IsChecked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Defines if the item is currently highlighted in the flyout.</summary>
        <value>
          <see langword="true" /> if the item is currently highlighted.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCheckedProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty IsCheckedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty IsCheckedProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.BaseShellItem.IsCheckedProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable IsCheckedProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.BaseShellItem.IsCheckedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Xamarin.Forms.BaseShellItem.IsChecked" /> field.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.BaseShellItem.IsEnabled" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="Xamarin.Forms.BaseShellItem.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Defines if the item is selectable in the chrome.</summary>
        <value>
          <see langword="true" /> if the item is selectable in the chrome.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.BaseShellItem.IsEnabledProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.BaseShellItem.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Xamarin.Forms.BaseShellItem.IsEnabled" /> field.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTabStop">
      <MemberSignature Language="C#" Value="public bool IsTabStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTabStop" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.BaseShellItem.IsTabStop" />
      <MemberSignature Language="F#" Value="member this.IsTabStop : bool with get, set" Usage="Xamarin.Forms.BaseShellItem.IsTabStop" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Xamarin.Forms.ITabStopElement.IsTabStop</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether a FlyoutItem is included in tab navigation.</summary>
        <value>Default value is <see langword="true" />; when <see langword="false" />, the FlyoutItem is ignored by the tab-navigation infrastructure, irrespective if a TabIndex is set.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTabStopProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty IsTabStopProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty IsTabStopProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.BaseShellItem.IsTabStopProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTabStopProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.BaseShellItem.IsTabStopProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Xamarin.Forms.BaseShellItem.IsTabStopProperty" /> field.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.BaseShellItem.IsVisible" />
      <MemberSignature Language="F#" Value="member this.IsVisible : bool with get, set" Usage="Xamarin.Forms.BaseShellItem.IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty IsVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty IsVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.BaseShellItem.IsVisibleProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable IsVisibleProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.BaseShellItem.IsVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAppearing">
      <MemberSignature Language="C#" Value="protected virtual void OnAppearing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAppearing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.BaseShellItem.OnAppearing" />
      <MemberSignature Language="F#" Value="abstract member OnAppearing : unit -&gt; unit&#xA;override this.OnAppearing : unit -&gt; unit" Usage="baseShellItem.OnAppearing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisappearing">
      <MemberSignature Language="C#" Value="protected virtual void OnDisappearing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisappearing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.BaseShellItem.OnDisappearing" />
      <MemberSignature Language="F#" Value="abstract member OnDisappearing : unit -&gt; unit&#xA;override this.OnDisappearing : unit -&gt; unit" Usage="baseShellItem.OnDisappearing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (string propertyName = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.BaseShellItem.OnPropertyChanged(System.String)" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanged : string -&gt; unit" Usage="baseShellItem.OnPropertyChanged propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName>System.Runtime.CompilerServices.CallerMemberName</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the changed property.</param>
        <summary>Called whenever a property changes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTabIndexPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTabIndexPropertyChanged (int oldValue, int newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTabIndexPropertyChanged(int32 oldValue, int32 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.BaseShellItem.OnTabIndexPropertyChanged(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnTabIndexPropertyChanged : int * int -&gt; unit&#xA;override this.OnTabIndexPropertyChanged : int * int -&gt; unit" Usage="baseShellItem.OnTabIndexPropertyChanged (oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Int32" />
        <Parameter Name="newValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="oldValue">Old TabIndex.</param>
        <param name="newValue">New TabIndex.</param>
        <summary>Called whenever the TabIndex property changes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTabStopPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTabStopPropertyChanged (bool oldValue, bool newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTabStopPropertyChanged(bool oldValue, bool newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.BaseShellItem.OnTabStopPropertyChanged(System.Boolean,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnTabStopPropertyChanged : bool * bool -&gt; unit&#xA;override this.OnTabStopPropertyChanged : bool * bool -&gt; unit" Usage="baseShellItem.OnTabStopPropertyChanged (oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Boolean" />
        <Parameter Name="newValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="oldValue">Old IsTabStop value.</param>
        <param name="newValue">New IsTabStop value.</param>
        <summary>Called whenever the IsTabStop property changes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Route">
      <MemberSignature Language="C#" Value="public string Route { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Route" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.BaseShellItem.Route" />
      <MemberSignature Language="F#" Value="member this.Route : string with get, set" Usage="Xamarin.Forms.BaseShellItem.Route" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The string used to address the item.</summary>
        <value>A unique string that identifies the item.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public int TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TabIndex" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.BaseShellItem.TabIndex" />
      <MemberSignature Language="F#" Value="member this.TabIndex : int with get, set" Usage="Xamarin.Forms.BaseShellItem.TabIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Xamarin.Forms.ITabStopElement.TabIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the order in which FlyoutItem objects receive focus when the user navigates through items by pressing the Tab key.</summary>
        <value>Defaults to 0.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIndexDefaultValueCreator">
      <MemberSignature Language="C#" Value="protected virtual int TabIndexDefaultValueCreator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 TabIndexDefaultValueCreator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.BaseShellItem.TabIndexDefaultValueCreator" />
      <MemberSignature Language="F#" Value="abstract member TabIndexDefaultValueCreator : unit -&gt; int&#xA;override this.TabIndexDefaultValueCreator : unit -&gt; int" Usage="baseShellItem.TabIndexDefaultValueCreator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called to set the default value of the TabIndex property..</summary>
        <returns>Defaults to 0.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIndexProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty TabIndexProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty TabIndexProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.BaseShellItem.TabIndexProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable TabIndexProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.BaseShellItem.TabIndexProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Xamarin.Forms.BaseShellItem.TabIndexProperty" /> field.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStopDefaultValueCreator">
      <MemberSignature Language="C#" Value="protected virtual bool TabStopDefaultValueCreator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TabStopDefaultValueCreator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.BaseShellItem.TabStopDefaultValueCreator" />
      <MemberSignature Language="F#" Value="abstract member TabStopDefaultValueCreator : unit -&gt; bool&#xA;override this.TabStopDefaultValueCreator : unit -&gt; bool" Usage="baseShellItem.TabStopDefaultValueCreator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called to set the default value of the TabStop property.</summary>
        <returns>
          <see langword="true" /> if TabStop.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.BaseShellItem.Title" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="Xamarin.Forms.BaseShellItem.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Title to display in the UI.</summary>
        <value>Title to display in the UI.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty TitleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty TitleProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.BaseShellItem.TitleProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable TitleProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.BaseShellItem.TitleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Xamarin.Forms.BaseShellItem.Title" /> field.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
