<Type Name="Cell" FullName="Xamarin.Forms.Cell">
  <TypeSignature Language="C#" Value="public abstract class Cell : Xamarin.Forms.Element, Xamarin.Forms.ICellController" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Cell extends Xamarin.Forms.Element implements class Xamarin.Forms.ICellController" />
  <TypeSignature Language="DocId" Value="T:Xamarin.Forms.Cell" />
  <TypeSignature Language="F#" Value="type Cell = class&#xA;    inherit Element&#xA;    interface ICellController" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Forms.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Xamarin.Forms.Element</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Xamarin.Forms.ICellController</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Provides base class and capabilities for all Xamarin.Forms cells. Cells are elements meant to be added to <see cref="T:Xamarin.Forms.ListView" /> or <see cref="T:Xamarin.Forms.TableView" />.</summary>
    <remarks>
      <para>The subtypes of <see cref="T:Xamarin.Forms.Cell" /> are:</para>
      <list type="table">
        <listheader>
          <term>Type</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>EntryCell</term>
          <description>A <see cref="T:Xamarin.Forms.Cell" /> with a label and a single line text entry field.</description>
        </item>
        <item>
          <term>SwitchCell</term>
          <description>A <see cref="T:Xamarin.Forms.Cell" /> with a label and an on/off switch.</description>
        </item>
        <item>
          <term>TextCell</term>
          <description>A <see cref="T:Xamarin.Forms.Cell" /> with primary and secondary text.</description>
        </item>
        <item>
          <term>ImageCell</term>
          <description>A <see cref="T:Xamarin.Forms.TextCell" /> that also includes an image.</description>
        </item>
        <item>
          <term>ViewCell</term>
          <description>A <see cref="T:Xamarin.Forms.Cell" /> containing a developer-defined <see cref="T:Xamarin.Forms.View" />.</description>
        </item>
      </list>
      <para>The various subclasses are shown in the following image:</para>
      <para>
        <img href="xamarin-media/Xamarin.Forms/_images/Cell.Gallery.png" />
      </para>
      <example>
        <code lang="C#"><![CDATA[
Content = new TableView
{
    Root = new TableRoot ("Table Title")
    {
        new TableSection("Section 1 Title")
        {
            new TextCell
            {
                Text = "TextCell Text",
                Detail = "TextCell Detail"
            },
            new ImageCell
            {
                Text = "ImageCell Text",
                Detail = "ImageCell Detail",
                ImageSource = "http://xamarin.com/images/index/ide-xamarin-studio.png"
            },
            new EntryCell
            {
                Label = "EntryCell:",
                Placeholder = "default keyboard",
                Keyboard = Keyboard.Default
            }
        },
        new TableSection("Section 2 Title")
        {
            new EntryCell
            {
                Label = "Another EntryCell:",
                Placeholder = "phone keyboard",
                Keyboard = Keyboard.Telephone
            },
            new SwitchCell
            {
                Text = "SwitchCell:"
            },
            new ViewCell
            {
                View = new StackLayout
                {
                    Orientation = StackOrientation.Horizontal,
                    Children = 
                    {
                        new Label
                        {
                            Text = "Custom Slider View:"
                        },
                        new Slider
                        {
                        }
                    }
                }
            }
        }
    }
}          
          ]]></code>
      </example>
      <para>XAML for Xamarin.Forms supports the following properties for the <see cref="T:Xamarin.Forms.Cell" /> class:</para>
      <list type="table">
        <listheader>
          <term>Property</term>
          <description>Value</description>
        </listheader>
        <item>
          <term>ContextActions</term>
          <description>
            <para>A list of <see cref="T:Xamarin.Forms.MenuItem" /> objects to display when the user performs the context action.</para>
          </description>
        </item>
        <item>
          <term>IsEnabled</term>
          <description>
            <para>
              <see langword="true" /> or <see langword="false" />, indicating whether the animation for <see cref="T:Xamarin.Forms.ActivityIndicator" /> is displayed.</para>
          </description>
        </item>
      </list>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Cell ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Cell.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the Cell class.</summary>
        <remarks>Cell class is abstract, this constructor is never invoked directly.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Appearing">
      <MemberSignature Language="C#" Value="public event EventHandler Appearing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Appearing" />
      <MemberSignature Language="DocId" Value="E:Xamarin.Forms.Cell.Appearing" />
      <MemberSignature Language="F#" Value="member this.Appearing : EventHandler " Usage="member this.Appearing : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the visual representation of the Cell is being added to the visual layout.</summary>
        <remarks>This method is raised before the cell is on screen.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextActions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Xamarin.Forms.MenuItem&gt; ContextActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Xamarin.Forms.MenuItem&gt; ContextActions" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Cell.ContextActions" />
      <MemberSignature Language="F#" Value="member this.ContextActions : System.Collections.Generic.IList&lt;Xamarin.Forms.MenuItem&gt;" Usage="Xamarin.Forms.Cell.ContextActions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Xamarin.Forms.MenuItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a list of menu items to display when the user performs the device-specific context gesture on the Cell.</summary>
        <value>The list of menu items that will be displayed when the user performs the device-specific context gesture on the Cell.</value>
        <remarks>The context gesture on the iOS platform is a left swipe. For Android and Windows Phone operating systems, the context gesture is a press and hold.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCellHeight">
      <MemberSignature Language="C#" Value="public const int DefaultCellHeight = 40;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DefaultCellHeight = (40)" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Cell.DefaultCellHeight" />
      <MemberSignature Language="F#" Value="val mutable DefaultCellHeight : int" Usage="Xamarin.Forms.Cell.DefaultCellHeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>40</MemberValue>
      <Docs>
        <summary>The default height of cells.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Disappearing">
      <MemberSignature Language="C#" Value="public event EventHandler Disappearing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disappearing" />
      <MemberSignature Language="DocId" Value="E:Xamarin.Forms.Cell.Disappearing" />
      <MemberSignature Language="F#" Value="member this.Disappearing : EventHandler " Usage="member this.Disappearing : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the visual representation of the Cell is being removed from the visual layout.</summary>
        <remarks>This method is for virtualization usage only. It is not gauranteed to fire for all visible Cells when the ListView or TableView is removed from the screen. Additionally it fires during virtualization, which may not correspond directly with removal from the screen depending on the platform virtualization technique used.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceUpdateSize">
      <MemberSignature Language="C#" Value="public void ForceUpdateSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForceUpdateSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Cell.ForceUpdateSize" />
      <MemberSignature Language="F#" Value="member this.ForceUpdateSize : unit -&gt; unit" Usage="cell.ForceUpdateSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Immediately updates the cell's size.</summary>
        <remarks>
          <para>Developers can call this method to update the cell's size, even if the cell is currently visible. Developers should note that this operation can be expensive.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceUpdateSizeRequested">
      <MemberSignature Language="C#" Value="public event EventHandler ForceUpdateSizeRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ForceUpdateSizeRequested" />
      <MemberSignature Language="DocId" Value="E:Xamarin.Forms.Cell.ForceUpdateSizeRequested" />
      <MemberSignature Language="F#" Value="member this.ForceUpdateSizeRequested : EventHandler " Usage="member this.ForceUpdateSizeRequested : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:Xamarin.Forms.ICellController.ForceUpdateSizeRequested</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasContextActions">
      <MemberSignature Language="C#" Value="public bool HasContextActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasContextActions" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Cell.HasContextActions" />
      <MemberSignature Language="F#" Value="member this.HasContextActions : bool" Usage="Xamarin.Forms.Cell.HasContextActions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the cell has at least one menu item in its <see cref="P:Xamarin.Forms.Cell.ContextActions" /> list property.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Cell.Height" />
      <MemberSignature Language="F#" Value="member this.Height : double with get, set" Usage="Xamarin.Forms.Cell.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the height of the Cell.</summary>
        <value>A double that represents the height of the cell.</value>
        <remarks>The <see cref="P:Xamarin.Forms.Cell.Height" /> property is ignored if the app developer sets the <see cref="P:Xamarin.Forms.ListView.HasUnevenRows" /> or <see cref="P:Xamarin.Forms.TableView.HasUnevenRows" /> property on the surrounding <see cref="T:Xamarin.Forms.View" /> to <see langword="false" />. In that case, the <see cref="P:Xamarin.Forms.ListView.RowHeight" /> or <see cref="P:Xamarin.Forms.TableView.RowHeight" /> property is used instead.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Cell.IsEnabled" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="Xamarin.Forms.Cell.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the IsEnabled state of the Cell. This is a bindable property.</summary>
        <value>A bool. Default is <see langword="true" />.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Cell.IsEnabledProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.Cell.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the IsEnabled bindable property.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAppearing">
      <MemberSignature Language="C#" Value="protected virtual void OnAppearing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAppearing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Cell.OnAppearing" />
      <MemberSignature Language="F#" Value="abstract member OnAppearing : unit -&gt; unit&#xA;override this.OnAppearing : unit -&gt; unit" Usage="cell.OnAppearing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invoked whenever an <see cref="E:Xamarin.Forms.Cell.Appearing" /> event occurs. Implement this method to add class handling for this event.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindingContextChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingContextChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBindingContextChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Cell.OnBindingContextChanged" />
      <MemberSignature Language="F#" Value="override this.OnBindingContextChanged : unit -&gt; unit" Usage="cell.OnBindingContextChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Event that is raised when the binding context is changed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisappearing">
      <MemberSignature Language="C#" Value="protected virtual void OnDisappearing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisappearing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Cell.OnDisappearing" />
      <MemberSignature Language="F#" Value="abstract member OnDisappearing : unit -&gt; unit&#xA;override this.OnDisappearing : unit -&gt; unit" Usage="cell.OnDisappearing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invoked whenever an <see cref="E:Xamarin.Forms.Cell.Disappearing" /> event occurs. Implement this method to add class handling for this event.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParentSet">
      <MemberSignature Language="C#" Value="protected override void OnParentSet ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnParentSet() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Cell.OnParentSet" />
      <MemberSignature Language="F#" Value="override this.OnParentSet : unit -&gt; unit" Usage="cell.OnParentSet " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Application developers can override this method to do actions when the cell's parent is set.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanging (string propertyName = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanging(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Cell.OnPropertyChanging(System.String)" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanging : string -&gt; unit" Usage="cell.OnPropertyChanging propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property on which to monitor value changes.</param>
        <summary>TApplication developers can override this method to do actions when the property named by <paramref name="propertyName" /> is set.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTapped">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTapped ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTapped() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Cell.OnTapped" />
      <MemberSignature Language="F#" Value="abstract member OnTapped : unit -&gt; unit&#xA;override this.OnTapped : unit -&gt; unit" Usage="cell.OnTapped " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invoked whenever the Cell is Tapped.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderHeight">
      <MemberSignature Language="C#" Value="public double RenderHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RenderHeight" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Cell.RenderHeight" />
      <MemberSignature Language="F#" Value="member this.RenderHeight : double" Usage="Xamarin.Forms.Cell.RenderHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the height of the rendered cell on the device.</summary>
        <value></value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAppearing">
      <MemberSignature Language="C#" Value="public void SendAppearing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendAppearing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Cell.SendAppearing" />
      <MemberSignature Language="F#" Value="abstract member SendAppearing : unit -&gt; unit&#xA;override this.SendAppearing : unit -&gt; unit" Usage="cell.SendAppearing " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Xamarin.Forms.ICellController.SendAppearing</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendDisappearing">
      <MemberSignature Language="C#" Value="public void SendDisappearing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendDisappearing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Cell.SendDisappearing" />
      <MemberSignature Language="F#" Value="abstract member SendDisappearing : unit -&gt; unit&#xA;override this.SendDisappearing : unit -&gt; unit" Usage="cell.SendDisappearing " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Xamarin.Forms.ICellController.SendDisappearing</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tapped">
      <MemberSignature Language="C#" Value="public event EventHandler Tapped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Tapped" />
      <MemberSignature Language="DocId" Value="E:Xamarin.Forms.Cell.Tapped" />
      <MemberSignature Language="F#" Value="member this.Tapped : EventHandler " Usage="member this.Tapped : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the Cell is Tapped.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>