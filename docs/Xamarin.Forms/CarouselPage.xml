<Type Name="CarouselPage" FullName="Xamarin.Forms.CarouselPage">
  <TypeSignature Language="C#" Value="public class CarouselPage : Xamarin.Forms.MultiPage&lt;Xamarin.Forms.ContentPage&gt;, Xamarin.Forms.IElementConfiguration&lt;Xamarin.Forms.CarouselPage&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CarouselPage extends Xamarin.Forms.MultiPage`1&lt;class Xamarin.Forms.ContentPage&gt; implements class Xamarin.Forms.IElementConfiguration`1&lt;class Xamarin.Forms.CarouselPage&gt;" />
  <TypeSignature Language="DocId" Value="T:Xamarin.Forms.CarouselPage" />
  <TypeSignature Language="F#" Value="type CarouselPage = class&#xA;    inherit MultiPage&lt;ContentPage&gt;&#xA;    interface IElementConfiguration&lt;CarouselPage&gt;" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Forms.Core</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Xamarin.Forms.MultiPage&lt;Xamarin.Forms.ContentPage&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">Xamarin.Forms.ContentPage</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Xamarin.Forms.IElementConfiguration&lt;Xamarin.Forms.CarouselPage&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Xamarin.Forms.RenderWith(typeof(Xamarin.Forms.Platform._CarouselPageRenderer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A Page that users can swipe from side to side to display pages of content, like a gallery.</summary>
    <remarks>
      <para>The <see cref="T:Xamarin.Forms.CarouselPage" /> provides a navigation experience that will feel natural and familiar to Windows Phone users. By using <see cref="T:Xamarin.Forms.TargetPlatform" />, application developers can provide customized navigation on a per-platform basis. For example, an application developer could use a <see cref="T:Xamarin.Forms.NavigationPage" /> for Android and iOS, and use a <see cref="T:Xamarin.Forms.CarouselPage" /> on Windows Phone.</para>
      <example>
        <para>The following XAML example, when properly included and referenced in a Xamarin.Forms project, creates a <see cref="T:Xamarin.Forms.CarouselPage" /> that displays three simple <see cref="T:Xamarin.Forms.ContentPage" /> elements:
  </para>
        <code lang="XAML"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<CarouselPage xmlns="http://xamarin.com/schemas/2014/forms" xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" x:Class="XamlExample1.MyPage">
    <ContentPage>
        <StackLayout>
            <Label Text="Red" />
            <BoxView Color="Red" VerticalOptions="FillAndExpand" />
        </StackLayout>
    </ContentPage>
    <ContentPage>
        <StackLayout>
            <Label Text="Green" />
            <BoxView Color="Green" VerticalOptions="FillAndExpand" />
        </StackLayout>
    </ContentPage>
    <ContentPage>
        <StackLayout>
            <Label Text="Blue" />
            <BoxView Color="Blue" VerticalOptions="FillAndExpand" />
        </StackLayout>
    </ContentPage>
</CarouselPage>]]></code>
      </example>
      <example>
        <para>The following C# example creates a <see cref="T:Xamarin.Forms.CarouselPage" /> that displays three simple <see cref="T:Xamarin.Forms.ContentPage" /> elements:</para>
        <code lang="csharp lang-csharp"><![CDATA[
List<ContentPage> pages = new List<ContentPage> (0);
Color[] colors = { Color.Red, Color.Green, Color.Blue };
foreach (Color c in colors) {
    pages.Add (new ContentPage { Content = new StackLayout {
            Children = {
                new Label { Text = c.ToString () },
                new BoxView {
                    Color = c,
                    VerticalOptions = LayoutOptions.FillAndExpand
                }
            }
        }
    });
}
    
MainPage = new CarouselPage {
    Children = { pages [0],
                 pages [1],
                 pages [2] }
};
]]></code>
      </example>
      <block subset="none" type="note">When embedding a CarouselPage into a <see cref="P:Xamarin.Forms.FlyoutPage.Detail" />, application developers should set <see cref="P:Xamarin.Forms.FlyoutPage.IsGestureEnabled" /> to <see langword="false" /> to prevent gesture conflicts between the CarouselPage and MasterDetailPage.</block>
      <para>
        <img href="~/Xamarin.Forms/_images/CarouselPage.TripleScreenShot.png" />
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CarouselPage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.CarouselPage.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the CarouselPage class.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefault">
      <MemberSignature Language="C#" Value="protected override Xamarin.Forms.ContentPage CreateDefault (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Xamarin.Forms.ContentPage CreateDefault(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.CarouselPage.CreateDefault(System.Object)" />
      <MemberSignature Language="F#" Value="override this.CreateDefault : obj -&gt; Xamarin.Forms.ContentPage" Usage="carouselPage.CreateDefault item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.ContentPage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">The object representing the model ofr the page.</param>
        <summary>Creates a default page, suitable for display in <c>this</c><see cref="T:Xamarin.Forms.CarouselPage" />, for an object.</summary>
        <returns>A page that is titled with the string value of <paramref name="item" />.</returns>
        <remarks>This returns a new <see cref="T:Xamarin.Forms.Page" /> object that has its <see cref="P:Xamarin.Forms.Page.Title" /> property set to the value of <see cref="M:System.Object.ToString" /> when called on <paramref name="item" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="On&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.IPlatformElementConfiguration&lt;T,Xamarin.Forms.CarouselPage&gt; On&lt;T&gt; () where T : Xamarin.Forms.IConfigPlatform;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Xamarin.Forms.IPlatformElementConfiguration`2&lt;!!T, class Xamarin.Forms.CarouselPage&gt; On&lt;(class Xamarin.Forms.IConfigPlatform) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.CarouselPage.On``1" />
      <MemberSignature Language="F#" Value="override this.On : unit -&gt; Xamarin.Forms.IPlatformElementConfiguration&lt;'T, Xamarin.Forms.CarouselPage (requires 'T :&gt; Xamarin.Forms.IConfigPlatform)&gt; (requires 'T :&gt; Xamarin.Forms.IConfigPlatform)" Usage="carouselPage.On " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Xamarin.Forms.IElementConfiguration`1.On``1</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.IPlatformElementConfiguration&lt;T,Xamarin.Forms.CarouselPage&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Xamarin.Forms.IConfigPlatform</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <summary>Returns the platform-specific instance of this <see cref="T:Xamarin.Forms.CarouselPage" />, on which a platform-specific method may be called.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
