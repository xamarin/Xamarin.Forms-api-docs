<Type Name="IShellController" FullName="Xamarin.Forms.IShellController">
  <TypeSignature Language="C#" Value="public interface IShellController : Xamarin.Forms.IPageController" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IShellController implements class Xamarin.Forms.IElementController, class Xamarin.Forms.IPageController, class Xamarin.Forms.IVisualElementController" />
  <TypeSignature Language="DocId" Value="T:Xamarin.Forms.IShellController" />
  <TypeSignature Language="F#" Value="type IShellController = interface&#xA;    interface IPageController&#xA;    interface IVisualElementController&#xA;    interface IElementController" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Forms.Core</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Xamarin.Forms.IElementController</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Xamarin.Forms.IPageController</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Xamarin.Forms.IVisualElementController</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Extends <see cref="T:Xamarin.Forms.IPageController" /> for Shell applications.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddAppearanceObserver">
      <MemberSignature Language="C#" Value="public void AddAppearanceObserver (Xamarin.Forms.IAppearanceObserver observer, Xamarin.Forms.Element pivot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAppearanceObserver(class Xamarin.Forms.IAppearanceObserver observer, class Xamarin.Forms.Element pivot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.IShellController.AddAppearanceObserver(Xamarin.Forms.IAppearanceObserver,Xamarin.Forms.Element)" />
      <MemberSignature Language="F#" Value="abstract member AddAppearanceObserver : Xamarin.Forms.IAppearanceObserver * Xamarin.Forms.Element -&gt; unit" Usage="iShellController.AddAppearanceObserver (observer, pivot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="Xamarin.Forms.IAppearanceObserver" />
        <Parameter Name="pivot" Type="Xamarin.Forms.Element" />
      </Parameters>
      <Docs>
        <param name="observer">To be added.</param>
        <param name="pivot">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFlyoutBehaviorObserver">
      <MemberSignature Language="C#" Value="public void AddFlyoutBehaviorObserver (Xamarin.Forms.IFlyoutBehaviorObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddFlyoutBehaviorObserver(class Xamarin.Forms.IFlyoutBehaviorObserver observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.IShellController.AddFlyoutBehaviorObserver(Xamarin.Forms.IFlyoutBehaviorObserver)" />
      <MemberSignature Language="F#" Value="abstract member AddFlyoutBehaviorObserver : Xamarin.Forms.IFlyoutBehaviorObserver -&gt; unit" Usage="iShellController.AddFlyoutBehaviorObserver observer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="Xamarin.Forms.IFlyoutBehaviorObserver" />
      </Parameters>
      <Docs>
        <param name="observer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppearanceChanged">
      <MemberSignature Language="C#" Value="public void AppearanceChanged (Xamarin.Forms.Element source, bool appearanceSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppearanceChanged(class Xamarin.Forms.Element source, bool appearanceSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.IShellController.AppearanceChanged(Xamarin.Forms.Element,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member AppearanceChanged : Xamarin.Forms.Element * bool -&gt; unit" Usage="iShellController.AppearanceChanged (source, appearanceSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Xamarin.Forms.Element" />
        <Parameter Name="appearanceSet" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="appearanceSet">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlyoutHeader">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.View FlyoutHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Xamarin.Forms.View FlyoutHeader" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.IShellController.FlyoutHeader" />
      <MemberSignature Language="F#" Value="member this.FlyoutHeader : Xamarin.Forms.View" Usage="Xamarin.Forms.IShellController.FlyoutHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlyoutIcon">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.ImageSource FlyoutIcon { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Xamarin.Forms.ImageSource FlyoutIcon" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.IShellController.FlyoutIcon" />
      <MemberSignature Language="F#" Value="member this.FlyoutIcon : Xamarin.Forms.ImageSource" Usage="Xamarin.Forms.IShellController.FlyoutIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.ImageSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateFlyoutGrouping">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Xamarin.Forms.Element&gt;&gt; GenerateFlyoutGrouping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.List`1&lt;class System.Collections.Generic.List`1&lt;class Xamarin.Forms.Element&gt;&gt; GenerateFlyoutGrouping() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.IShellController.GenerateFlyoutGrouping" />
      <MemberSignature Language="F#" Value="abstract member GenerateFlyoutGrouping : unit -&gt; System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Xamarin.Forms.Element&gt;&gt;" Usage="iShellController.GenerateFlyoutGrouping " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Xamarin.Forms.Element&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Xamarin.Forms.ShellItem&gt; GetItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Xamarin.Forms.ShellItem&gt; GetItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.IShellController.GetItems" />
      <MemberSignature Language="F#" Value="abstract member GetItems : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;Xamarin.Forms.ShellItem&gt;" Usage="iShellController.GetItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Xamarin.Forms.ShellItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNavigationState">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.ShellNavigationState GetNavigationState (Xamarin.Forms.ShellItem shellItem, Xamarin.Forms.ShellSection shellSection, Xamarin.Forms.ShellContent shellContent, bool includeStack = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Xamarin.Forms.ShellNavigationState GetNavigationState(class Xamarin.Forms.ShellItem shellItem, class Xamarin.Forms.ShellSection shellSection, class Xamarin.Forms.ShellContent shellContent, bool includeStack) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.IShellController.GetNavigationState(Xamarin.Forms.ShellItem,Xamarin.Forms.ShellSection,Xamarin.Forms.ShellContent,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member GetNavigationState : Xamarin.Forms.ShellItem * Xamarin.Forms.ShellSection * Xamarin.Forms.ShellContent * bool -&gt; Xamarin.Forms.ShellNavigationState" Usage="iShellController.GetNavigationState (shellItem, shellSection, shellContent, includeStack)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.ShellNavigationState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shellItem" Type="Xamarin.Forms.ShellItem" />
        <Parameter Name="shellSection" Type="Xamarin.Forms.ShellSection" />
        <Parameter Name="shellContent" Type="Xamarin.Forms.ShellContent" />
        <Parameter Name="includeStack" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="shellItem">To be added.</param>
        <param name="shellSection">To be added.</param>
        <param name="shellContent">To be added.</param>
        <param name="includeStack">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsCollectionChanged">
      <MemberSignature Language="C#" Value="event System.Collections.Specialized.NotifyCollectionChangedEventHandler ItemsCollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Collections.Specialized.NotifyCollectionChangedEventHandler ItemsCollectionChanged" />
      <MemberSignature Language="DocId" Value="E:Xamarin.Forms.IShellController.ItemsCollectionChanged" />
      <MemberSignature Language="F#" Value="member this.ItemsCollectionChanged : System.Collections.Specialized.NotifyCollectionChangedEventHandler " Usage="member this.ItemsCollectionChanged : System.Collections.Specialized.NotifyCollectionChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NotifyCollectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFlyoutItemSelected">
      <MemberSignature Language="C#" Value="public void OnFlyoutItemSelected (Xamarin.Forms.Element element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnFlyoutItemSelected(class Xamarin.Forms.Element element) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.IShellController.OnFlyoutItemSelected(Xamarin.Forms.Element)" />
      <MemberSignature Language="F#" Value="abstract member OnFlyoutItemSelected : Xamarin.Forms.Element -&gt; unit" Usage="iShellController.OnFlyoutItemSelected element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Xamarin.Forms.Element" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFlyoutItemSelectedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task OnFlyoutItemSelectedAsync (Xamarin.Forms.Element element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnFlyoutItemSelectedAsync(class Xamarin.Forms.Element element) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.IShellController.OnFlyoutItemSelectedAsync(Xamarin.Forms.Element)" />
      <MemberSignature Language="F#" Value="abstract member OnFlyoutItemSelectedAsync : Xamarin.Forms.Element -&gt; System.Threading.Tasks.Task" Usage="iShellController.OnFlyoutItemSelectedAsync element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Xamarin.Forms.Element" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProposeNavigation">
      <MemberSignature Language="C#" Value="public bool ProposeNavigation (Xamarin.Forms.ShellNavigationSource source, Xamarin.Forms.ShellItem item, Xamarin.Forms.ShellSection shellSection, Xamarin.Forms.ShellContent shellContent, System.Collections.Generic.IReadOnlyList&lt;Xamarin.Forms.Page&gt; stack, bool canCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ProposeNavigation(valuetype Xamarin.Forms.ShellNavigationSource source, class Xamarin.Forms.ShellItem item, class Xamarin.Forms.ShellSection shellSection, class Xamarin.Forms.ShellContent shellContent, class System.Collections.Generic.IReadOnlyList`1&lt;class Xamarin.Forms.Page&gt; stack, bool canCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.IShellController.ProposeNavigation(Xamarin.Forms.ShellNavigationSource,Xamarin.Forms.ShellItem,Xamarin.Forms.ShellSection,Xamarin.Forms.ShellContent,System.Collections.Generic.IReadOnlyList{Xamarin.Forms.Page},System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ProposeNavigation : Xamarin.Forms.ShellNavigationSource * Xamarin.Forms.ShellItem * Xamarin.Forms.ShellSection * Xamarin.Forms.ShellContent * System.Collections.Generic.IReadOnlyList&lt;Xamarin.Forms.Page&gt; * bool -&gt; bool" Usage="iShellController.ProposeNavigation (source, item, shellSection, shellContent, stack, canCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Xamarin.Forms.ShellNavigationSource" />
        <Parameter Name="item" Type="Xamarin.Forms.ShellItem" />
        <Parameter Name="shellSection" Type="Xamarin.Forms.ShellSection" />
        <Parameter Name="shellContent" Type="Xamarin.Forms.ShellContent" />
        <Parameter Name="stack" Type="System.Collections.Generic.IReadOnlyList&lt;Xamarin.Forms.Page&gt;" />
        <Parameter Name="canCancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="item">To be added.</param>
        <param name="shellSection">To be added.</param>
        <param name="shellContent">To be added.</param>
        <param name="stack">To be added.</param>
        <param name="canCancel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAppearanceObserver">
      <MemberSignature Language="C#" Value="public bool RemoveAppearanceObserver (Xamarin.Forms.IAppearanceObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveAppearanceObserver(class Xamarin.Forms.IAppearanceObserver observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.IShellController.RemoveAppearanceObserver(Xamarin.Forms.IAppearanceObserver)" />
      <MemberSignature Language="F#" Value="abstract member RemoveAppearanceObserver : Xamarin.Forms.IAppearanceObserver -&gt; bool" Usage="iShellController.RemoveAppearanceObserver observer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="Xamarin.Forms.IAppearanceObserver" />
      </Parameters>
      <Docs>
        <param name="observer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlyoutBehaviorObserver">
      <MemberSignature Language="C#" Value="public bool RemoveFlyoutBehaviorObserver (Xamarin.Forms.IFlyoutBehaviorObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveFlyoutBehaviorObserver(class Xamarin.Forms.IFlyoutBehaviorObserver observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.IShellController.RemoveFlyoutBehaviorObserver(Xamarin.Forms.IFlyoutBehaviorObserver)" />
      <MemberSignature Language="F#" Value="abstract member RemoveFlyoutBehaviorObserver : Xamarin.Forms.IFlyoutBehaviorObserver -&gt; bool" Usage="iShellController.RemoveFlyoutBehaviorObserver observer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="Xamarin.Forms.IFlyoutBehaviorObserver" />
      </Parameters>
      <Docs>
        <param name="observer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StructureChanged">
      <MemberSignature Language="C#" Value="event EventHandler StructureChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StructureChanged" />
      <MemberSignature Language="DocId" Value="E:Xamarin.Forms.IShellController.StructureChanged" />
      <MemberSignature Language="F#" Value="member this.StructureChanged : EventHandler " Usage="member this.StructureChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCurrentState">
      <MemberSignature Language="C#" Value="public void UpdateCurrentState (Xamarin.Forms.ShellNavigationSource source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateCurrentState(valuetype Xamarin.Forms.ShellNavigationSource source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.IShellController.UpdateCurrentState(Xamarin.Forms.ShellNavigationSource)" />
      <MemberSignature Language="F#" Value="abstract member UpdateCurrentState : Xamarin.Forms.ShellNavigationSource -&gt; unit" Usage="iShellController.UpdateCurrentState source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Xamarin.Forms.ShellNavigationSource" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
