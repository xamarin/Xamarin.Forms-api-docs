<Type Name="InputView" FullName="Xamarin.Forms.InputView">
  <TypeSignature Language="C#" Value="public class InputView : Xamarin.Forms.View" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InputView extends Xamarin.Forms.View" />
  <TypeSignature Language="DocId" Value="T:Xamarin.Forms.InputView" />
  <TypeSignature Language="F#" Value="type InputView = class&#xA;    inherit View" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Forms.Core</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Xamarin.Forms.View</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The base class of a view which can take keyboard input.</summary>
    <remarks>The constructor of this class is internal. Xamarin.Forms does not provide any renderer for InputView base class.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CharacterSpacing">
      <MemberSignature Language="C#" Value="public double CharacterSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 CharacterSpacing" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.InputView.CharacterSpacing" />
      <MemberSignature Language="F#" Value="member this.CharacterSpacing : double with get, set" Usage="Xamarin.Forms.InputView.CharacterSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates the number of device-independent units that should be in between characters in the text displayed by the Entry. Applies to Text and Placeholder.</summary>
        <value>The number of device-independent units that should be in between characters in the text.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterSpacingProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty CharacterSpacingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty CharacterSpacingProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.InputView.CharacterSpacingProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable CharacterSpacingProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.InputView.CharacterSpacingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="P:Xamarin.Forms.InputView.CharacterSpacing" /> property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.InputView.IsReadOnly" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool with get, set" Usage="Xamarin.Forms.InputView.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether user should be prevented from modifying the text. Default is <see langword="false" />.</summary>
        <value>If <see langword="true" />, user cannot modify text. Else, <see langword="false" />.</value>
        <remarks>The IsReadonly property does not alter the visual appearance of the control, unlike the IsEnabled property that also changes the visual appearance of the control to gray.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.InputView.IsReadOnlyProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable IsReadOnlyProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.InputView.IsReadOnlyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="P:Xamarin.Forms.InputView.IsReadOnly" /> property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpellCheckEnabled">
      <MemberSignature Language="C#" Value="public bool IsSpellCheckEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpellCheckEnabled" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.InputView.IsSpellCheckEnabled" />
      <MemberSignature Language="F#" Value="member this.IsSpellCheckEnabled : bool with get, set" Usage="Xamarin.Forms.InputView.IsSpellCheckEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that controls whether spell checking is enabled.</summary>
        <value>
          <see langword="true" /> if spell checking is enabled. Otherwise <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpellCheckEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty IsSpellCheckEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty IsSpellCheckEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.InputView.IsSpellCheckEnabledProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSpellCheckEnabledProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.InputView.IsSpellCheckEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="P:Xamarin.Forms.InputView.IsSpellCheckEnabled" /> property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keyboard">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.Keyboard Keyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Xamarin.Forms.Keyboard Keyboard" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.InputView.Keyboard" />
      <MemberSignature Language="F#" Value="member this.Keyboard : Xamarin.Forms.Keyboard with get, set" Usage="Xamarin.Forms.InputView.Keyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.Keyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the Keyboard for the InputView. This is a bindable property.</summary>
        <value>The <see cref="T:Xamarin.Forms.Keyboard" /> to use for the InputView.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty KeyboardProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty KeyboardProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.InputView.KeyboardProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyboardProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.InputView.KeyboardProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="P:Xamarin.Forms.InputView.Keyboard" /> property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.InputView.MaxLength" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="Xamarin.Forms.InputView.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum allowed length of input.</summary>
        <value>An integer in the interval [0,<c>int.MaxValue</c>]. The default value is <c>Int.MaxValue</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLengthProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty MaxLengthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty MaxLengthProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.InputView.MaxLengthProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxLengthProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.InputView.MaxLengthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="P:Xamarin.Forms.InputView.MaxLength" /> property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextChanged (string oldValue, string newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextChanged(string oldValue, string newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.InputView.OnTextChanged(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member OnTextChanged : string * string -&gt; unit&#xA;override this.OnTextChanged : string * string -&gt; unit" Usage="inputView.OnTextChanged (oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.String" />
        <Parameter Name="newValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldValue">To be added.</param>
        <param name="newValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextTransformChanged">
      <MemberSignature Language="C#" Value="public void OnTextTransformChanged (Xamarin.Forms.TextTransform oldValue, Xamarin.Forms.TextTransform newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTextTransformChanged(valuetype Xamarin.Forms.TextTransform oldValue, valuetype Xamarin.Forms.TextTransform newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.InputView.OnTextTransformChanged(Xamarin.Forms.TextTransform,Xamarin.Forms.TextTransform)" />
      <MemberSignature Language="F#" Value="abstract member OnTextTransformChanged : Xamarin.Forms.TextTransform * Xamarin.Forms.TextTransform -&gt; unit&#xA;override this.OnTextTransformChanged : Xamarin.Forms.TextTransform * Xamarin.Forms.TextTransform -&gt; unit" Usage="inputView.OnTextTransformChanged (oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="Xamarin.Forms.TextTransform" />
        <Parameter Name="newValue" Type="Xamarin.Forms.TextTransform" />
      </Parameters>
      <Docs>
        <param name="oldValue">To be added.</param>
        <param name="newValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Placeholder">
      <MemberSignature Language="C#" Value="public string Placeholder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Placeholder" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.InputView.Placeholder" />
      <MemberSignature Language="F#" Value="member this.Placeholder : string with get, set" Usage="Xamarin.Forms.InputView.Placeholder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text that is displayed when the control is empty.</summary>
        <value>The text that is displayed when the control is empty.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaceholderColor">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.Color PlaceholderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Xamarin.Forms.Color PlaceholderColor" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.InputView.PlaceholderColor" />
      <MemberSignature Language="F#" Value="member this.PlaceholderColor : Xamarin.Forms.Color with get, set" Usage="Xamarin.Forms.InputView.PlaceholderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the color of the placeholder text.</summary>
        <value>The color of the placeholder text.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaceholderColorProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty PlaceholderColorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty PlaceholderColorProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.InputView.PlaceholderColorProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable PlaceholderColorProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.InputView.PlaceholderColorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="P:Xamarin.Forms.InputView.PlaceholderColor" /> property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaceholderProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty PlaceholderProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty PlaceholderProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.InputView.PlaceholderProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable PlaceholderProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.InputView.PlaceholderProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="P:Xamarin.Forms.InputView.Placeholder" /> property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.InputView.Text" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="Xamarin.Forms.InputView.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text of the input view. This is a bindable property.</summary>
        <value>A string containing the text of the input view. The default value is null.</value>
        <remarks>Setting this property will cause the <see cref="E:Xamarin.Forms.InputView.TextChanged" /> event to be emitted.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Xamarin.Forms.TextChangedEventArgs&gt; TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Xamarin.Forms.TextChangedEventArgs&gt; TextChanged" />
      <MemberSignature Language="DocId" Value="E:Xamarin.Forms.InputView.TextChanged" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler&lt;Xamarin.Forms.TextChangedEventArgs&gt; " Usage="member this.TextChanged : System.EventHandler&lt;Xamarin.Forms.TextChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Xamarin.Forms.TextChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event that is raised when the text of the Editor changes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextColor">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.Color TextColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Xamarin.Forms.Color TextColor" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.InputView.TextColor" />
      <MemberSignature Language="F#" Value="member this.TextColor : Xamarin.Forms.Color with get, set" Usage="Xamarin.Forms.InputView.TextColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text color.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextColorProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty TextColorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty TextColorProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.InputView.TextColorProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable TextColorProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.InputView.TextColorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="P:Xamarin.Forms.InputView.TextColor" /> property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty TextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty TextProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.InputView.TextProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable TextProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.InputView.TextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="P:Xamarin.Forms.InputView.Text" /> property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextTransform">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.TextTransform TextTransform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Xamarin.Forms.TextTransform TextTransform" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.InputView.TextTransform" />
      <MemberSignature Language="F#" Value="member this.TextTransform : Xamarin.Forms.TextTransform with get, set" Usage="Xamarin.Forms.InputView.TextTransform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.TextTransform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextTransformProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty TextTransformProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty TextTransformProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.InputView.TextTransformProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable TextTransformProperty : Xamarin.Forms.BindableProperty" Usage="Xamarin.Forms.InputView.TextTransformProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateFormsText">
      <MemberSignature Language="C#" Value="public string UpdateFormsText (string original, Xamarin.Forms.TextTransform transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UpdateFormsText(string original, valuetype Xamarin.Forms.TextTransform transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.InputView.UpdateFormsText(System.String,Xamarin.Forms.TextTransform)" />
      <MemberSignature Language="F#" Value="abstract member UpdateFormsText : string * Xamarin.Forms.TextTransform -&gt; string&#xA;override this.UpdateFormsText : string * Xamarin.Forms.TextTransform -&gt; string" Usage="inputView.UpdateFormsText (original, transform)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.String" />
        <Parameter Name="transform" Type="Xamarin.Forms.TextTransform" />
      </Parameters>
      <Docs>
        <param name="original">To be added.</param>
        <param name="transform">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
